#!/usr/bin/env bash

program_name="$(basename "$0")"

[ $# -lt 4 ] && printf "%s: Invaild usage.\n\nUsage: %s -i input_file -o output_file\n" "$program_name" "$program_name" && exit 1

while [[ $# -gt 0 ]]; do
    case "$1" in
        "-i")
            [ -f "$2" ] && input_file="$2"; shift 2 && continue
            printf "%s: No such file or directory - '%s'\n" "$program_name" "$1" && exit 1
            ;;
        "-o") output_file="$2"; shift 2;;
    esac
done

command -v paru >/dev/null 2>&1 && package_manager="paru"
while [ -z "$package_manager" ]; do
    command -v yay >/dev/null 2>&1 && package_manager="yay" && break
    package_manager="pacman" && break
done

# Read input file line by line
# Use IFS='|' to split fields by '|'
while IFS='|' read -r method environment package description; do
    # Check if line is a comment (starts with '#') or empty
    case "$method" in
        \#*|"")
            # Write comment or empty line as-is to the output
            # Preserve the original number of columns
            printf '%s' "$method" >> "$output_file"
            [ -n "$environment" ] && printf '|%s' "$environment" >> "$output_file"
            [ -n "$package" ] && printf '|%s' "$package" >> "$output_file"
            [ -n "$description" ] && printf '|%s' "$description" >> "$output_file"
            printf '\n' >> "$output_file"
            continue
            ;;
    esac

    # Trim spaces from package name (third column)
    pkgname=$(printf '%s' "$package" | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')

    # If no package name, set description to N/A
    if [ -z "$pkgname" ]; then
        description="N/A"
    else
        # Query package_manager for package description
        description=$($package_manager -Si "$pkgname" 2>/dev/null | awk -F': ' '/^Description/ {print $2}' | sed 's/|/ /g')

        # If description not found, set to N/A
        [ -z "$description" ] && description="N/A"
    fi

    # Write updated line to output: method|environment|package|new_description
    printf '%s|%s|%s| "%s"\n' "$method" "$environment" "$package" "$description" >> "$output_file"
done <"$input_file"
